name: 转换规则为Mihomo二进制格式

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  convert-rules:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出仓库
      uses: actions/checkout@v4
      
    - name: 安装Go环境
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: 安装Mihomo
      run: |
        LATEST_VERSION=$(curl -s https://api.github.com/repos/MetaCubeX/mihomo/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
        echo "最新版本号: $LATEST_VERSION"
        
        echo "尝试下载mihomo二进制文件..."
        
        if wget -O mihomo.gz "https://github.com/MetaCubeX/mihomo/releases/download/${LATEST_VERSION}/mihomo-linux-amd64-compatible-${LATEST_VERSION}.gz" 2>/dev/null; then
          echo "已下载兼容版本"
          gzip -d mihomo.gz
          chmod +x mihomo
          sudo mv mihomo /usr/local/bin/mihomo
        elif wget -O mihomo.gz "https://github.com/MetaCubeX/mihomo/releases/download/${LATEST_VERSION}/mihomo-linux-amd64-${LATEST_VERSION}.gz" 2>/dev/null; then
          echo "已下载标准版本"
          gzip -d mihomo.gz
          chmod +x mihomo
          sudo mv mihomo /usr/local/bin/mihomo
        else
          echo "直接下载失败，使用Docker提取二进制文件..."
          docker pull metacubex/mihomo:latest
          docker create --name mihomo_temp metacubex/mihomo:latest
          docker cp mihomo_temp:/mihomo ./mihomo
          docker rm mihomo_temp
          chmod +x mihomo
          sudo mv mihomo /usr/local/bin/mihomo
        fi
        
        timeout 10s mihomo -v || mihomo --version || echo "版本检查完成"
        
    - name: 配置规则集
      run: |
        cat > rules_config.txt << 'EOF'
        direct|https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt|direct.mrs
        proxy|https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt|proxy.mrs
        reject|https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/reject.txt|reject.mrs
        EOF
        
    - name: 下载并转换规则
      run: |
        mkdir -p rules output
        
        while IFS='|' read -r name url output_file; do
          if [[ "$name" =~ ^#.* ]] || [[ -z "$name" ]]; then
            continue
          fi
          
          echo "正在处理规则: $name"
          echo "  下载地址: $url"
          echo "  输出文件: $output_file"
          
          if wget -O "rules/${name}.txt" "$url"; then
            echo "  ✓ 下载成功"
            
            if timeout 60s mihomo convert-ruleset domain text "rules/${name}.txt" "output/${output_file}"; then
              echo "  ✓ 转换成功"
              
              if [ -f "output/${output_file}" ] && [ -s "output/${output_file}" ]; then
                echo "  ✓ 文件验证通过: $(stat -c%s "output/${output_file}") 字节"
              else
                echo "  ✗ 生成的文件为空或不存在"
                exit 1
              fi
            else
              echo "  ✗ 转换失败"
              exit 1
            fi
          else
            echo "  ✗ 下载失败"
            exit 1
          fi
          echo ""
        done < rules_config.txt
        
        echo "已生成文件:"
        ls -la output/
        
    - name: 创建发布版本
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      with:
        tag_name: v${{ github.run_number }}
        name: 规则集 v${{ github.run_number }}
        body: |
          自动生成的二进制规则集
          **生成时间:** $(date -u +%Y-%m-%dT%H:%M:%SZ)
        files: output/*.mrs
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 上传产物
      uses: actions/upload-artifact@v4
      with:
        name: mihomo-rules-binary
        path: output/
        retention-days: 30
        
    - name: 提交变更
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        
        cp output/*.mrs ./ 2>/dev/null || true
        
        if [ -n "$(git status --porcelain)" ]; then
          git add *.mrs
          git commit -m "更新规则 - $(date -u +%Y-%m-%d)"
          git push
        else
          echo "没有变更需要提交"
        fi
